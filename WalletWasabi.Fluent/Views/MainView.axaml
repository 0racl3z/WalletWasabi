<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vl="clr-namespace:WalletWasabi.Fluent"
             xmlns:c="clr-namespace:WalletWasabi.Fluent.Controls"
             xmlns:local="clr-namespace:WalletWasabi.Fluent.Views"
             xmlns:rxui="clr-namespace:Avalonia.ReactiveUI;assembly=Avalonia.ReactiveUI"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:behaviors="clr-namespace:WalletWasabi.Fluent.Behaviors;assembly=WalletWasabi.Fluent"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="WalletWasabi.Fluent.Views.MainView">
  <Panel>
    <SplitView IsPaneOpen="{Binding NavBar.IsOpen, Mode=TwoWay}">
      <i:Interaction.Behaviors>
        <behaviors:SplitViewAutoBehavior ToggleAction="{Binding NavBar.ToggleAction, Mode=OneWayToSource}"
                                        CollapseOnClickAction="{Binding NavBar.CollapseOnClickAction, Mode=OneWayToSource}"
                                        CollapseThreshold="{StaticResource SplitViewCollapseThreshold}" />
      </i:Interaction.Behaviors>
      <SplitView.Pane>
        <Panel>
          <ExperimentalAcrylicBorder DockPanel.Dock="Left" IsHitTestVisible="False">
            <ExperimentalAcrylicBorder.Material>
              <ExperimentalAcrylicMaterial BackgroundSource="Digger"
                                          TintColor="{DynamicResource SystemAltHighColor}"
                                          TintOpacity="1"
                                          FallbackColor="{DynamicResource AcrylicFallbackColor}"
                                          MaterialOpacity="0.55" />
            </ExperimentalAcrylicBorder.Material>
          </ExperimentalAcrylicBorder>
          <local:NavBar DataContext="{Binding NavBar}" />
        </Panel>
      </SplitView.Pane>
      <Panel>
        <DockPanel>
          <local:StatusBar DockPanel.Dock="Bottom" Classes="h8" DataContext="{Binding StatusBar}" VerticalAlignment="Bottom" Height="32" />
          <Panel>
            <Border Background="{DynamicResource RegionColor}" BoxShadow="{DynamicResource BoxShadow}" IsHitTestVisible="False" />
            <rxui:RoutedViewHost Router="{Binding Router}" Margin="20 36 20 20">
              <rxui:RoutedViewHost.ViewLocator>
                <vl:ScreenViewLocator />
              </rxui:RoutedViewHost.ViewLocator>
              <rxui:RoutedViewHost.PageTransition>
                <CrossFade Duration="0:0:0.25" />
              </rxui:RoutedViewHost.PageTransition>
              <rxui:RoutedViewHost.DefaultContent>
                <TextBlock Text="Default content"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" />
              </rxui:RoutedViewHost.DefaultContent>
            </rxui:RoutedViewHost>
          </Panel>
        </DockPanel>
      </Panel>
    </SplitView>
    <Panel DataContext="{Binding DialogScreen}" IsVisible="{Binding IsDialogVisible}">
      <Panel Background="{DynamicResource DialogOverlayColor}">
        <i:Interaction.Behaviors>
          <ia:EventTriggerBehavior EventName="PointerPressed">
            <ia:CallMethodAction TargetObject="{Binding}" MethodName="Close" />
          </ia:EventTriggerBehavior>
        </i:Interaction.Behaviors>
      </Panel>
      <Border Padding="0,40,0,40" CornerRadius="4" Background="{DynamicResource DialogBackground}" Margin="40" MaxWidth="1024" MaxHeight="768">
        <rxui:RoutedViewHost Router="{Binding Router}">
          <rxui:RoutedViewHost.ViewLocator>
            <vl:ScreenViewLocator />
          </rxui:RoutedViewHost.ViewLocator>
          <rxui:RoutedViewHost.PageTransition>
            <CrossFade Duration="0:0:0.25" />
          </rxui:RoutedViewHost.PageTransition>
          <rxui:RoutedViewHost.DefaultContent>
            <TextBlock Text="Default content"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center" />
          </rxui:RoutedViewHost.DefaultContent>
        </rxui:RoutedViewHost>
      </Border>
    </Panel>
    <c:Dialog DataContext="{Binding CurrentDialog}" Content="{Binding }" IsDialogOpen="{Binding IsDialogOpen, Mode=TwoWay}" />
  </Panel>
</UserControl>